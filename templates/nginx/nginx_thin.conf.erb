upstream <%= application %>_app_server {
<% if thin_socket %>
  <% (1..thin_servers).each do |thin_server_num| %>server unix:<%= thin_socket_for_server(thin_server_num) %> fail_timeout=0;
  <% end %>
<% else %>
  <% (1..thin_servers).each do |thin_server_num| %>server 127.0.0.1:<%= thin_port_for_server(thin_server_num) %>;
  <% end %>
<% end %>
}


# <%= application %> Server
<% if nginx_use_ssl %>
server {
  server_name .<%= application_domain %>;
  listen 80;
  rewrite ^(.*) https://<%= application_domain %>$1 permanent;
}

server {
  server_name .<%= application_domain %>;
  listen 443 ssl;

  ssl_certificate /etc/nginx/ssl/<%= application_domain %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= application_domain %>.key;
<% else %>
server {
  server_name .<%= application_domain %>;
  listen 80;
<% end %>

  client_max_body_size 100M;
  keepalive_timeout 60;
  root <%= deploy_to %>/current/public;
  gzip on;
  gzip_types text/plain text/xml application/xml application/xml+rss
  text/css text/javascript application/javascript application/json;

  access_log <%= nginx_log_path %>/access.log;
  error_log <%= nginx_log_path %>/error.log info;

  rewrite ^/(.*)/$ /$1 permanent; # Truncate trailing slashes
  try_files $uri @rails;

  expires -1;
  # TODO: enable cache for all non-static content
  # maybe expires max; in server context, and expires -1; in @rails location?
  # location ~ \.[\w]+$ { # Files with extension, .css, .png, etc.
  # expires max;
  # }

  location = /favicon.ico {
    try_files $uri =204;
    access_log off;
    log_not_found off;
  }

  location ~* ^/assets/ {
    root <%= deploy_to %>/current/public;
  }
  location ~* ^/uploads\/city\/city_map/ {
    root <%= deploy_to %>/current/public;
  }
  location /ZeroClipboard.swf {
    root <%= deploy_to %>/current/public;
  }

  location ~ /\.(svn|git) { deny all; }

  location @rails {
    proxy_pass http://<%= application %>_app_server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_intercept_errors on;
    expires -1;
  }

  error_page 500 502 503 504 /500.html;
  error_page 403 /403.html;
  error_page 404 /404.html;
}